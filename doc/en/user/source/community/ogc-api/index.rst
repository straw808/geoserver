.. _community_ogcapi:

OGC API Extension
=================
This plugin includes implementation of a set of OGC API service implementations 

Installing the GeoServer OGC API module
---------------------------------------
  
 #. Download the "ogc-api" module from the `nightly GeoServer community module builds <https://build.geoserver.org/geoserver/master/community-latest/>`_.

    .. warning:: Make sure to match the version of the extension to the version of the GeoServer instance!

 #. Extract the contents of the archive into the ``WEB-INF/lib`` directory of the GeoServer installation.

Warning
-------

The OGC API services are still in heavy development, most of the specs and extensions are still
in draft form and their behavior is likely to change in the next months/year.

Services provided
-----------------

The package contains:

* A `OGC Features API <https://github.com/opengeospatial/ogcapi-features>`_ up to date with the 
  released version of the Features API, along with implementation of the 
  `draft CQL filtering extension <https://github.com/opengeospatial/ogcapi-features/tree/master/extensions/cql>`_ and 
  the `draft multi-crs extension <https://github.com/opengeospatial/ogcapi-features/tree/master/extensions/crs>`_
* A `OGC Tiles API <https://github.com/opengeospatial/OGC-API-Tiles>`_ based on the current early
  specification draft, delivering both tiled data (vector tiles) and tiled maps (classic map tiles).
* A `OGC Styles API <https://github.com/opengeospatial/ogcapi-styles>`_ based on the early draft
  of this specification, allowing to describe, retrieve and update styles present on the server.
  Styles are linked back and forwards with their associated collections in both the Features and Tiles API
* A couple of extra API, images and changesets, based on engineering reports of Testbed 15, allowing
  to update a image mosaic and get a list of tiles affected by the change.

Configuration
-------------

Currently the modules have no extra configuration and depend on the configuration of the classic
OGC services they aim to replace. This could change in the future.

How to help
-----------

The modules are still in their infancy, there is a set of activities that could help their development:

* Implementation of missing draft API services, such as the `Maps API <https://github.com/opengeospatial/OGC-API-Maps>`_,
  the `Coverages API <https://github.com/opengeospatial/ogc_api_coverages>`_, the `Records API <https://github.com/opengeospatial/ogcapi-records>`_
  and the `Process API <https://github.com/opengeospatial/wps-rest-binding>`_.
* Implemetation of new draft extensions not yet covered, like the `OGC Features API Transaction extension <https://github.com/opengeospatial/ogcapi-features/tree/master/extensions/transactions>`_.
* Improvement of the HTML representation of resources, both in terms of looks and functionality 
  (the specification makes no mandate for them, so they are free to implement as we see fit).
* Testing and improvement of the OpenAPI documents generated by each service, with particular focus
  on automatic generation of clients.
* General testing, reporting and bug fixing.
